name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Download dependencies
      run: go mod download
    
    - uses: dagger/dagger-for-github@v6
      with:
        version: "0.16.3"
        verb: call
        module: ./ci
        args: lint --source .

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Download dependencies
      run: go mod download
    
    - uses: dagger/dagger-for-github@v6
      with:
        version: "0.16.3"
        verb: call
        module: ./ci
        args: test --source .

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: dagger/dagger-for-github@v6
      with:
        version: "0.16.3"
        verb: call
        module: ./ci
        args: security-scan --source .

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ["linux/amd64", "linux/arm64"]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    
    - uses: dagger/dagger-for-github@v6
      with:
        version: "0.16.3"
        verb: call
        module: ./ci
        args: build --source . --platforms ${{ matrix.platform }}


  all-checks:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - uses: dagger/dagger-for-github@v6
      with:
        version: "0.16.3"
        verb: call
        module: ./ci
        args: all --source .