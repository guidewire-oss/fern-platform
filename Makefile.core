# Fern Platform - Core Development Makefile
# Handles build, test, and basic development tasks

# Build configuration
BINARY_NAME=fern-platform
BUILD_DIR=bin
CMD_DIR=cmd/fern-platform
VERSION?=$(shell git describe --tags --always --dirty)
BUILD_TIME=$(shell date -u +%Y-%m-%dT%H:%M:%SZ)
GIT_COMMIT=$(shell git rev-parse HEAD)

# Go build flags
GO_BUILD_FLAGS=-ldflags "-X main.Version=$(VERSION) -X main.BuildTime=$(BUILD_TIME) -X main.GitCommit=$(GIT_COMMIT)"

# Core workflow targets
.PHONY: deps build clean dev run

deps: ## Install dependencies
	@echo "ðŸ“¦ Installing dependencies..."
	go mod download
	go mod tidy
	@echo "âœ… Dependencies installed"

build: deps ## Build the platform binary for current OS/architecture
	@echo "ðŸ”¨ Building Fern Platform..."
	mkdir -p $(BUILD_DIR)
	go build $(GO_BUILD_FLAGS) -o $(BUILD_DIR)/$(BINARY_NAME) $(CMD_DIR)/main.go
	@echo "âœ… Built $(BUILD_DIR)/$(BINARY_NAME)"

clean: ## Clean build artifacts
	@echo "ðŸ§¹ Cleaning build artifacts..."
	rm -rf $(BUILD_DIR)/
	rm -f coverage.out coverage.html
	@echo "âœ… Clean completed"

dev: ## Run in development mode with live reload
	@echo "ðŸ”§ Starting development mode..."
	air -c .air.toml || go run $(CMD_DIR)/main.go -config config/config.yaml

run: build ## Build and run the platform
	@echo "ðŸš€ Starting Fern Platform..."
	./$(BUILD_DIR)/$(BINARY_NAME) -config config/config.yaml

# Project information
info: ## Show project information
	@echo "ðŸŒ¿ Fern Platform Information"
	@echo "========================="
	@echo "Version: $(VERSION)"
	@echo "Build Time: $(BUILD_TIME)"
	@echo "Git Commit: $(GIT_COMMIT)"
	@echo "Go Version: $(shell go version)"
	@echo "Binary: $(BUILD_DIR)/$(BINARY_NAME)"